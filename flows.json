[{"id":"88b2c004.efb2e","type":"tab","label":"Serial","disabled":false,"info":""},{"id":"5de75df9.540e64","type":"tab","label":"GUI experiments","disabled":false,"info":""},{"id":"9a17449e.eb5068","type":"tab","label":"RPi monitoring","disabled":false,"info":""},{"id":"56d1bb6c.021d04","type":"tab","label":"InfluxDB","disabled":false,"info":""},{"id":"17947ce9.249123","type":"serial-port","serialport":"/dev/ttyACM0","serialbaud":"9600","databits":"8","parity":"none","stopbits":"1","waitfor":"","dtr":"none","rts":"none","cts":"none","dsr":"none","newline":"\\n","bin":"bin","out":"char","addchar":"","responsetimeout":"10000"},{"id":"c3173234.2636e","type":"ui_tab","name":"RPi Control","icon":"dashboard","order":4},{"id":"1890881e.83819","type":"ui_group","name":"Col1","tab":"c3173234.2636e","order":1,"disp":false,"width":"6"},{"id":"9a96a8b1.92db78","type":"ui_group","name":"Col2","tab":"c3173234.2636e","order":3,"disp":false,"width":"6"},{"id":"72fc319.cc425d","type":"ui_group","name":"Col3","tab":"c3173234.2636e","order":4,"disp":false,"width":"6"},{"id":"2992b6be.64f2ba","type":"serial-port","serialport":"/dev/ttyS3","serialbaud":"9600","databits":"8","parity":"none","stopbits":"1","waitfor":"","dtr":"none","rts":"none","cts":"none","dsr":"none","newline":"\\n","bin":"false","out":"char","addchar":"","responsetimeout":"10000"},{"id":"d6f63a0c.df77e8","type":"ui_group","name":"Chronoamperometry","tab":"752ad78a.67d308","order":2,"disp":true,"width":"6","collapse":false},{"id":"86f5982c.641f88","type":"ui_group","name":"basic orders","tab":"245db38c.519eac","order":1,"disp":true,"width":"6","collapse":false},{"id":"94630134.cfe16","type":"ui_group","name":"Interface","tab":"245db38c.519eac","order":3,"disp":true,"width":"6","collapse":true},{"id":"a82dfb74.30c4f8","type":"ui_group","name":"ADC and gain/mode settings","tab":"245db38c.519eac","order":2,"disp":true,"width":"6","collapse":true},{"id":"752ad78a.67d308","type":"ui_tab","name":"dstat experiment","icon":"dashboard","order":2,"disabled":false,"hidden":false},{"id":"245db38c.519eac","type":"ui_tab","name":"Main menu","icon":"dashboard","order":1,"disabled":false,"hidden":false},{"id":"f070a991.851438","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"920360d3.be108","type":"ui_group","name":"Potentiometry","tab":"752ad78a.67d308","order":1,"disp":true,"width":"6","collapse":false},{"id":"d844bc15.22d5c","type":"ui_group","name":"graphs","tab":"752ad78a.67d308","order":4,"disp":true,"width":"6","collapse":false},{"id":"1e146452.52b48c","type":"ui_group","name":"Analysis","tab":"752ad78a.67d308","order":3,"disp":true,"width":"6","collapse":false},{"id":"86221217.326cd","type":"serial-port","serialport":"/dev/ttyACM1","serialbaud":"9600","databits":"8","parity":"none","stopbits":"1","waitfor":"","dtr":"none","rts":"none","cts":"none","dsr":"none","newline":"\\n","bin":"bin","out":"char","addchar":"","responsetimeout":"10000"},{"id":"4e618391.3cbfdc","type":"ui_group","name":"Table of commands","tab":"245db38c.519eac","order":4,"disp":true,"width":"6","collapse":false},{"id":"8eb3d325.f865b","type":"ui_spacer","name":"spacer","group":"86f5982c.641f88","order":4,"width":6,"height":1},{"id":"93d92fa0.2b904","type":"influxdb","hostname":"dstatzero","port":"8086","protocol":"http","database":"dstat","name":"dstat","usetls":false,"tls":"","influxdbVersion":"1.x","url":"http://localhost:8086","rejectUnauthorized":true},{"id":"5d45f536.0dd91c","type":"exec","z":"9a17449e.eb5068","command":"vcgencmd measure_temp","addpay":false,"append":"","useSpawn":"","timer":"","name":"RPi Temp.","x":310,"y":40,"wires":[["e7c3ad6f.90883"],[],[]]},{"id":"d3a5595.c3d4aa8","type":"inject","z":"9a17449e.eb5068","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"3","crontab":"","once":false,"onceDelay":"","topic":"","payload":"","payloadType":"date","x":110,"y":40,"wires":[["5d45f536.0dd91c","b697fb9e.47e298","8a30689c.04cf68"]]},{"id":"e7c3ad6f.90883","type":"function","z":"9a17449e.eb5068","name":"","func":"str = msg.payload\nmsg.payload = str.substring(5,9);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":490,"y":40,"wires":[["a286c593.b1d368"]]},{"id":"90875c8.dae87a","type":"exec","z":"9a17449e.eb5068","command":"sudo reboot","addpay":false,"append":"","useSpawn":"","timer":"","name":"Reboot","x":298,"y":420,"wires":[[],[],[]]},{"id":"71608f3f.e4e15","type":"exec","z":"9a17449e.eb5068","command":"sudo shutdown -h now","addpay":false,"append":"","useSpawn":"","timer":"","name":"Shutdown","x":309.5,"y":482.25,"wires":[[],[],[]]},{"id":"b697fb9e.47e298","type":"exec","z":"9a17449e.eb5068","command":"top -d 0.5 -b -n2 | grep \"Cpu(s)\"|tail -n 1 | awk '{print $2 + $4}'","addpay":false,"append":"","useSpawn":"","timer":"","name":"CPU Load","x":310,"y":120,"wires":[["bdd87834.15dfe8","2dbd0212.a2783e"],[],[]]},{"id":"8a30689c.04cf68","type":"exec","z":"9a17449e.eb5068","command":"free | grep Mem | awk '{printf \"%2.1f\",$4/($2 /100.0)}'","addpay":false,"append":"","useSpawn":"","timer":"","name":"Free Memory","x":310,"y":200,"wires":[["c47c427.26a43c","a22f4237.4bfdb"],[],[]]},{"id":"b8fadf09.01aa1","type":"exec","z":"9a17449e.eb5068","command":"df -h","addpay":false,"append":"","useSpawn":"","timer":"","name":"Disk Usage","x":310,"y":280,"wires":[["6d9beebf.34e4d"],[],[]]},{"id":"6d9beebf.34e4d","type":"function","z":"9a17449e.eb5068","name":"","func":"var re = /([0-9]{2})%/\nvar idx = msg.payload.search(re);\nvar str = msg.payload;\nif (idx >=0) {\n    str = msg.payload.substring(idx, idx + 2);\n}\nmsg.payload = str;\nreturn msg;","outputs":1,"noerr":0,"x":490,"y":280,"wires":[["a7c5c02d.0c842"]]},{"id":"6b733a8.a61a3c4","type":"inject","z":"9a17449e.eb5068","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"60","crontab":"","once":false,"onceDelay":"","topic":"","payload":"","payloadType":"date","x":110,"y":280,"wires":[["b8fadf09.01aa1"]]},{"id":"a286c593.b1d368","type":"ui_gauge","z":"9a17449e.eb5068","name":"","group":"72fc319.cc425d","order":1,"width":0,"height":0,"gtype":"gage","title":"CPU Temperature","label":"C","format":"{{value}}","min":0,"max":"100","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":670,"y":40,"wires":[]},{"id":"bdd87834.15dfe8","type":"ui_gauge","z":"9a17449e.eb5068","name":"","group":"1890881e.83819","order":1,"width":0,"height":0,"gtype":"gage","title":"Processor","label":"CPU","format":"{{value}}","min":0,"max":"100","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":660,"y":100,"wires":[]},{"id":"c47c427.26a43c","type":"ui_gauge","z":"9a17449e.eb5068","name":"","group":"9a96a8b1.92db78","order":1,"width":0,"height":0,"gtype":"gage","title":"Memory","label":"RAM","format":"{{value}}","min":0,"max":"100","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":660,"y":200,"wires":[]},{"id":"a7c5c02d.0c842","type":"ui_gauge","z":"9a17449e.eb5068","name":"","group":"72fc319.cc425d","order":2,"width":0,"height":0,"gtype":"gage","title":"Disk","label":"Usage","format":"{{value}}","min":0,"max":"100","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":650,"y":280,"wires":[]},{"id":"6a144383.c2107c","type":"ui_button","z":"9a17449e.eb5068","name":"","group":"72fc319.cc425d","order":3,"width":0,"height":0,"passthru":false,"label":"Reboot","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","x":80,"y":420,"wires":[["90875c8.dae87a"]]},{"id":"ac8c4cc3.0ec6e","type":"ui_button","z":"9a17449e.eb5068","name":"","group":"72fc319.cc425d","order":4,"width":0,"height":0,"passthru":false,"label":"Shutdown","tooltip":"","color":"","bgcolor":"red","icon":"","payload":"","payloadType":"str","topic":"","x":88.5,"y":464.25,"wires":[["71608f3f.e4e15"]]},{"id":"36afd7e1.38c7a8","type":"serial in","z":"88b2c004.efb2e","name":"dstat out","serial":"17947ce9.249123","x":690,"y":150,"wires":[["63fa16d5.68d328","60b60b4b.6d28e4"]]},{"id":"52a713f.0e238ec","type":"serial out","z":"88b2c004.efb2e","name":"dstat in","serial":"17947ce9.249123","x":570,"y":150,"wires":[]},{"id":"70802a86.9aab04","type":"function","z":"88b2c004.efb2e","name":"add newline","func":"msg.payload = msg.payload + \"\\n\"\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":590,"y":420,"wires":[["52a713f.0e238ec","4634304d.c3ad2","f77a0cd9.918d3"]]},{"id":"9e68af9.8ff085","type":"ui_button","z":"88b2c004.efb2e","name":"Are you awake?","group":"86f5982c.641f88","order":1,"width":0,"height":0,"passthru":true,"label":"are you awake?","tooltip":"","color":"","bgcolor":"","icon":"","payload":"0","payloadType":"str","topic":"","x":260,"y":30,"wires":[["304ad502.d9173a"]]},{"id":"4ca3006c.3e964","type":"function","z":"88b2c004.efb2e","name":"number of letters","func":"command = flow.get(\"command\");\nif (command == \"0\"){\n    msg.payload = \"!\" + 0 \n} else {\n    msg.payload = \"!\" + command.length\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\n\n\nflow.set(\"response\")","finalize":"","x":240,"y":330,"wires":[["70802a86.9aab04"]]},{"id":"999277ba.162cb8","type":"ui_button","z":"88b2c004.efb2e","name":"ask for version","group":"86f5982c.641f88","order":2,"width":0,"height":0,"passthru":true,"label":"dstat firmware version","tooltip":"","color":"","bgcolor":"","icon":"","payload":"V","payloadType":"str","topic":"","x":260,"y":60,"wires":[["304ad502.d9173a"]]},{"id":"1eaecb98.20ff24","type":"inject","z":"88b2c004.efb2e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":90,"y":30,"wires":[["9e68af9.8ff085"]]},{"id":"bd3a0274.50c18","type":"inject","z":"88b2c004.efb2e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":90,"y":60,"wires":[["999277ba.162cb8"]]},{"id":"dd8af2fc.5f4b","type":"function","z":"88b2c004.efb2e","name":"send command","func":"command = flow.get(\"command\");\nacknowledge = flow.get(\"acknowledge\");\nreceived = flow.get(\"received\");\n\np_request = flow.get(\"parameters_request\");\np_chain = flow.get(\"parameter_chain\");\np_received = flow.get(\"parameters_received\");\np_error = flow.get(\"parameters_error\");\nparameters = global.get(\"parameters\");\n\nif (p_error > 1){\n    return 0;\n}\n        \ndone = flow.get(\"done\");\n\n//repeat exclamation !0 if not received\nif (received == 0 && command == \"0\"){\n    return 0 \n}\n// dstat is ready to receive command\nelse if (acknowledge == command.length && received != command.length){\n    msg.payload = command; \n    return msg \n} \n\nelse if (p_request > 0){\n    p_request = flow.get(\"parameters_request\");\n    p_chain = flow.get(\"parameter_chain\");\n    p_received = flow.get(\"parameters_received\");\n    p_error = flow.get(\"parameters_error\");\n    parameters = global.get(\"parameters\");\n    // when parameters received are equeal to request we scape\n    // and restart counter\n    if (p_received == p_request){\n        flow.set(\"parameter_counter\", 0);\n        return 0\n    } \n    // if not, we need to send one parameter at a time\n    else {\n        counter = flow.get(\"parameter_counter\");\n        p_request = flow.get(\"parameters_request\");\n        p_error = flow.get(\"parameters_error\");\n        \n        // If counter has run through all the parameters, then ignore\n        if (counter >= p_request){\n            return 0\n            // return 0;\n        }\n        // if there are errors, re-send last parameter\n        else if (p_error == 1 && flow.get(\"sent_parameter\")==0){\n            counter = flow.get(\"parameter_counter\");\n            msg.payload = parameters[counter-1];\n            flow.set(\"sent_parameter\",1);\n            return msg;\n        } \n        else if (flow.get(\"sent_parameter\")==0){\n            counter = flow.get(\"parameter_counter\");\n            msg.payload = parameters[counter];\n            flow.set(\"sent_parameter\",1);\n            return msg;\n        }\n    }\n}\n\n// command has been already received\nelse if (received == command.length || done == 1){\n    return 0\n}\n\n","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\n\n\nflow.set(\"response\")","finalize":"","x":600,"y":380,"wires":[["70802a86.9aab04"]]},{"id":"4634304d.c3ad2","type":"ui_text","z":"88b2c004.efb2e","group":"94630134.cfe16","order":1,"width":0,"height":0,"name":"input to dstat","label":"input to dstat","format":"{{msg.payload}}","layout":"col-center","x":590,"y":460,"wires":[]},{"id":"f77a0cd9.918d3","type":"debug","z":"88b2c004.efb2e","name":"input dstat logger","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":610,"y":500,"wires":[]},{"id":"304ad502.d9173a","type":"function","z":"88b2c004.efb2e","name":"Reinitialize flow variables","func":"// set payload as command\nflow.set(\"command\", msg.payload);\n\n// experiment value depending on command\ncommand = flow.get(\"command\");\n\nif(command.startsWith(\"EP\")){\n    flow.set(\"experiment\", 0);\n    // flow variables to filter data\n    flow.set(\"data_next\", 0);\n    flow.set(\"data_available\", 0);\n    // flow variables for handling parameters\n    flow.set(\"parameters_request\", \"not expected\");\n    flow.set(\"parameters_received\", \"not expected\");\n    flow.set(\"parameters_error\", \"not expected\");\n    flow.set(\"parameter_counter\", \"not expected\");\n}\nelse if(command.startsWith(\"ER\")){\n    flow.set(\"experiment\", 1);\n    // flow variables for handling parameters\n    flow.set(\"parameters_request\", 0);\n    flow.set(\"parameters_received\", 0);\n    flow.set(\"parameters_error\", 0);\n    flow.set(\"parameter_counter\", 0);\n    flow.set(\"parameter_chain\", \"waiting\");\n    // flow variables to filter data\n    flow.set(\"data_next\", 0);\n    flow.set(\"data_available\", 0);\n    flow.set(\"data_graph\",0);\n} \nelse {\n    flow.set(\"experiment\", \"not set\");\n    // flow variables to filter data\n    flow.set(\"data_next\", \"not expected\");\n    flow.set(\"data_available\", \"not expected\");\n    // flow variables for handling parameters\n    flow.set(\"parameters_request\", \"not expected\");\n    flow.set(\"parameters_received\", \"not expected\");\n    flow.set(\"parameters_error\", \"not expected\");\n    flow.set(\"parameter_counter\", \"not expected\");\n}\n\n// responses from dstat\nflow.set(\"acknowledge\", \"not ack\");\nflow.set(\"received\", \"not received\");\n\n// variable to keep dstat response\nflow.set(\"response\", \"waiting...\");\n\n// boolean to check if the experiment is done\nflow.set(\"done\", 0);\n\nreturn msg","outputs":1,"noerr":0,"initialize":"","finalize":"","x":230,"y":300,"wires":[["4ca3006c.3e964"]]},{"id":"1c00c1b7.44f72e","type":"inject","z":"88b2c004.efb2e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":90,"y":120,"wires":[["cbe0b5cf.898df8"]]},{"id":"cbe0b5cf.898df8","type":"ui_button","z":"88b2c004.efb2e","name":"reconnect usb stack","group":"86f5982c.641f88","order":5,"width":0,"height":0,"passthru":true,"label":"reconnect usb stack","tooltip":"","color":"","bgcolor":"","icon":"","payload":"R","payloadType":"str","topic":"","x":280,"y":120,"wires":[["304ad502.d9173a"]]},{"id":"7ef02b52.a179a4","type":"inject","z":"88b2c004.efb2e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":90,"y":90,"wires":[["8869807b.6a1f6"]]},{"id":"8869807b.6a1f6","type":"ui_button","z":"88b2c004.efb2e","name":"ask for settings","group":"86f5982c.641f88","order":3,"width":0,"height":0,"passthru":true,"label":"read settings","tooltip":"","color":"","bgcolor":"","icon":"","payload":"SR","payloadType":"str","topic":"","x":260,"y":90,"wires":[["304ad502.d9173a"]]},{"id":"5aef0159.92b33","type":"function","z":"88b2c004.efb2e","name":"Redirect response by command","func":"command = flow.get(\"command\");\nresponse = flow.get(\"response\");\ndone = flow.get(\"done\");\n\nif(command == \"0\" && done == 1){\n    msg.payload = response;\n    return msg;\n}\nelse if(command == \"V\" && done == 1){\n    msg.payload = response;\n    return msg;\n}\nelse if(command == \"SR\"){\n    response = response.replace(\"S\", \"\");\n    response = response.replace(/\\:/g, \"\\n\");\n    response = response.replace(/\\./g, \",\");\n    msg.payload = response;\n    return msg;\n} \nelse {\n    return msg;\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":890,"y":460,"wires":[["5763ad30.31fa44","fadd435b.5812f","f043dc8d.e7cee"]]},{"id":"b1b000c6.bc216","type":"csv","z":"88b2c004.efb2e","name":"","sep":",","hdrin":true,"hdrout":"none","multi":"mult","ret":"\\n","temp":"","skip":"0","strings":false,"include_empty_strings":"","include_null_values":"","x":930,"y":580,"wires":[["94e50aff.e018b8"]]},{"id":"94e50aff.e018b8","type":"ui_table","z":"88b2c004.efb2e","group":"94630134.cfe16","name":"table","order":2,"width":6,"height":7,"columns":[],"outputs":0,"cts":false,"x":950,"y":620,"wires":[]},{"id":"2dbd0212.a2783e","type":"ui_chart","z":"9a17449e.eb5068","name":"CPU Load chart","group":"1890881e.83819","order":2,"width":6,"height":5,"label":"CPU load chart","chartType":"line","legend":"false","xformat":"HH:mm","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"x":680,"y":140,"wires":[[]]},{"id":"a22f4237.4bfdb","type":"ui_chart","z":"9a17449e.eb5068","name":"Free memory chart","group":"9a96a8b1.92db78","order":2,"width":6,"height":5,"label":"Free Memory chart ","chartType":"line","legend":"false","xformat":"HH:mm","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"x":700,"y":240,"wires":[[]]},{"id":"f55b52f5.9d4f1","type":"function","z":"88b2c004.efb2e","name":"If next comes data","func":"// if the variable data_next == 1 means there is data\nbuffer = msg.payload;\ndata = flow.get(\"data_next\");\nif(data == 1){\n    // the translation depends on type of experiment\n    switch(flow.get(\"experiment\")) {\n        // 0 == potentiometry\n        case 0:\n            if(Buffer.byteLength(buffer)==9){\n                seconds = buffer.readInt16LE(0);\n                millis = buffer.readInt16LE(2);\n                seconds = seconds + millis/1000;\n                voltage = buffer.readInt32LE(4);\n                // transformation from ADC to readable voltages\n                // Volts = adc_code/(adc_PGA_gain/2)*(1.5/8388607.)\n                PGA_gain = global.get(\"PGA_gain\");\n                voltage = (voltage/(PGA_gain/2))*(1.5/8388607);\n                // in mV\n                voltage = voltage * 1000;\n                // in order to have round number of mV\n                voltage = voltage * 1000;\n                voltage = Math.round(voltage)/1000;\n                // generate a JSON object\n                // making easier to carry the data to database or file\n                msg.payload = {\n                    \"experiment\": \"Potentiometry\",\n                    \"date\": Date.now(),\n                    //\"date_string\": Date.now.toISOString(),\n                    \"length\" : Buffer.byteLength(buffer),\n                    \"voltage_mV\" : voltage,\n                    \"current_mA\" : \"not required\",\n                    \"seconds\" : seconds.toFixed(3)\n                    };\n                // Due to the presence of data, we can set flow variable \"graph\" to 1\n                // and reinitialize variable \"data\" to 0 to get ready for new data\n                // flow.set(\"data_next\",0);\n                flow.set(\"data_next\", 0);\n                flow.set(\"data_available\",1);\n                return msg;\n            } else {\n                // flow.set(\"data_next\", 0);\n                // flow.set(\"data_available\",0);\n                return 0;\n            }\n        break;\n        // 1 == chronoamperometry\n        case 1:\n            if(Buffer.byteLength(buffer)==9){\n                seconds = buffer.readInt16LE(0);\n                millis = buffer.readInt16LE(2);\n                seconds = seconds + millis/1000;\n                current = buffer.readInt32LE(4);\n                // transformation from ADC to readable currents\n                // Amps = (adc_code/(adc_PGA_gain/2))*(1.5/iv_gain/8388607)\n                // adc_PGA_gain: the PGA gain setting of the ADC. \n                // Normal setting is 2x (±1.5 V full-scale)\n                // iv_gain: the gain of the transimpedance amplifier \n                // in ohms\n                PGA_gain = global.get(\"PGA_gain\");\n                iv_gain = global.get(\"iv_gain\");\n                current = (current/(PGA_gain/2))*(1.5/iv_gain/8388607);\n                //in mA\n                current = current*1000;\n                voltage = global.get(\"pots_mV\");\n                // generate a JSON object\n                // making easier to carry the data to database or file\n                msg.payload = {\n                    \"experiment\": \"chronoamperometry\",\n                    \"date\": Date.now(),\n                    //\"date_string\": Date.now.toISOString(),\n                    \"length\" : Buffer.byteLength(buffer),\n                    \"voltage_mV\" : voltage[0],\n                    \"current_mA\" : current,\n                    \"seconds\" : seconds.toFixed(3)\n                    };\n                // Due to the presence of data, we can set flow variable \"graph\" to 1\n                // and reinitialize variable \"data\" to 0 to get ready for new data\n                flow.set(\"data_next\", 0);\n                flow.set(\"data_available\",1);\n                return msg;\n            } else {\n                // flow.set(\"data_next\", 0);\n                // flow.set(\"data_available\",0);\n                return 0\n            }\n        break;\n    }        \n}\n// if there is no data means we can translate to string\n// in case there is no data then graph is set to 0\n// and the payload is translated to a string\n// and apply different flow variables depending on the \n// preceeding characters\nelse {\n    // flow.set(\"data_available\",0);\n    return msg; \n}\n    ","outputs":1,"noerr":0,"initialize":"","finalize":"","x":870,"y":240,"wires":[["b3b8f76a.2d7398"]]},{"id":"fadd435b.5812f","type":"function","z":"88b2c004.efb2e","name":"data","func":"if(flow.get(\"data_graph\")==1){\n    switch (flow.get(\"experiment\")){\n        case 0:\n            msg.payload = msg.payload.voltage_mV;\n            return msg\n        break\n        case 1:\n            msg.payload = msg.payload.current_mA;\n            return msg\n        break\n    }\n} else {\n    return 0\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1150,"y":460,"wires":[["65baf39d.42fbcc","c33b3ab4.1b5fe8"]]},{"id":"ea2987cb.74f9a8","type":"ui_button","z":"88b2c004.efb2e","name":"stop experiment","group":"920360d3.be108","order":7,"width":0,"height":0,"passthru":true,"label":"stop experiment","tooltip":"","color":"","bgcolor":"red","icon":"","payload":"aaaaaaa","payloadType":"str","topic":"","x":260,"y":630,"wires":[["e3af4491.c5ac58"]]},{"id":"dba9a196.df30e","type":"inject","z":"88b2c004.efb2e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":80,"y":860,"wires":[["a42f9ccc.15c"]]},{"id":"70475c84.1e7cf4","type":"inject","z":"88b2c004.efb2e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":90,"y":630,"wires":[["ea2987cb.74f9a8"]]},{"id":"65baf39d.42fbcc","type":"ui_gauge","z":"88b2c004.efb2e","name":"","group":"d844bc15.22d5c","order":1,"width":0,"height":0,"gtype":"gage","title":"OCP","label":"units","format":"{{value}}","min":"-1500","max":"1500","colors":["#00b500","#e6e600","#ca3838"],"seg1":"-500","seg2":"500","x":1290,"y":460,"wires":[]},{"id":"661ffce8.5e9234","type":"debug","z":"88b2c004.efb2e","name":"dstat output translated","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1180,"y":240,"wires":[]},{"id":"a6b89f4a.946b5","type":"debug","z":"88b2c004.efb2e","name":"dstat buffer","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1090,"y":60,"wires":[]},{"id":"5763ad30.31fa44","type":"function","z":"88b2c004.efb2e","name":"response","func":"msg.payload = \"response\" + \"\\n\" + msg.payload; \nreturn msg\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":900,"y":540,"wires":[["b1b000c6.bc216"]]},{"id":"5538274a.71a378","type":"ui_dropdown","z":"5de75df9.540e64","name":"Sample rate","label":"Sample rate","tooltip":"","place":"Select option","group":"a82dfb74.30c4f8","order":4,"width":0,"height":0,"passthru":true,"multiple":false,"options":[{"label":"2.5 Hz","value":"03","type":"str"},{"label":"5 Hz","value":"13","type":"str"},{"label":"10 Hz","value":"23","type":"str"},{"label":"15 Hz","value":"33","type":"str"},{"label":"25 Hz","value":"43","type":"str"},{"label":"30 Hz","value":"53","type":"str"},{"label":"50 Hz","value":"63","type":"str"},{"label":"60 Hz","value":"72","type":"str"},{"label":"100 Hz","value":"82","type":"str"}],"payload":"","topic":"","x":190,"y":150,"wires":[["cbca7ba4.b6f798"]]},{"id":"9709db2b.0d9708","type":"ui_dropdown","z":"5de75df9.540e64","name":"Gain","label":"Gain","tooltip":"","place":"Select option","group":"a82dfb74.30c4f8","order":9,"width":0,"height":0,"passthru":true,"multiple":false,"options":[{"label":"15 mA FS / 100 ohm","value":"1","type":"str"},{"label":"5 mA FS / 300 ohm","value":"2","type":"str"},{"label":"50 microA FS / 30 kohm","value":"3","type":"str"},{"label":"5 microA FS / 300 kohm","value":"4","type":"str"},{"label":"50 nA FS / 30 Mohm","value":"5","type":"str"},{"label":"3 nA FS / 500 Mohm","value":"6","type":"str"},{"label":"bypass","value":"0","type":"str"}],"payload":"","topic":"","x":170,"y":270,"wires":[["7856681b.4ceef8"]]},{"id":"c24c0c01.38d6a","type":"ui_dropdown","z":"5de75df9.540e64","name":"PGA settings","label":"PGA settings","tooltip":"","place":"Select option","group":"a82dfb74.30c4f8","order":3,"width":0,"height":0,"passthru":false,"multiple":false,"options":[{"label":"1x","value":"0","type":"str"},{"label":"2x","value":"1","type":"str"},{"label":"4x","value":"2","type":"str"},{"label":"8x","value":"3","type":"str"},{"label":"16x","value":"4","type":"str"},{"label":"32x","value":"5","type":"str"},{"label":"64x","value":"6","type":"str"}],"payload":"","topic":"PGA","x":190,"y":120,"wires":[["2dc2f76b.2402a8"]]},{"id":"da62531e.74faf","type":"ui_switch","z":"5de75df9.540e64","name":"Input buffer","label":"Input buffer","tooltip":"","group":"a82dfb74.30c4f8","order":5,"width":0,"height":0,"passthru":true,"decouple":"false","topic":"InputBuffer","style":"","onvalue":"2","onvalueType":"str","onicon":"","oncolor":"","offvalue":"0","offvalueType":"str","officon":"","offcolor":"","x":190,"y":180,"wires":[["479b4d43.dfca24"]]},{"id":"aa92e965.cee1c8","type":"ui_switch","z":"5de75df9.540e64","name":"2 electrode mode","label":"2-electrode mode","tooltip":"","group":"a82dfb74.30c4f8","order":10,"width":0,"height":0,"passthru":true,"decouple":"false","topic":"","style":"","onvalue":"1","onvalueType":"str","onicon":"","oncolor":"","offvalue":"0","offvalueType":"str","officon":"","offcolor":"","x":210,"y":240,"wires":[["32afbd7e.caeb82"]]},{"id":"b63e818d.e5c8c","type":"function","z":"5de75df9.540e64","name":"","func":"PGA = flow.get(\"PGA\");\nSample_rate = flow.get(\"Sample_rate\");\nInput_buffer = flow.get(\"Input_buffer\");\n\nADC_command = \"EA\" + Input_buffer +\n                            \" \" + Sample_rate +\n                            \" \" + PGA + \" \"\n\nglobal.set(\"ADC_command\", ADC_command);\nmsg.payload = ADC_command;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":600,"y":150,"wires":[["fbfc1362.0fcab"]]},{"id":"2dc2f76b.2402a8","type":"function","z":"5de75df9.540e64","name":"","func":"flow.set(\"PGA\", msg.payload);\nnumber = parseInt(msg.payload);\nswitch (number){\n    case 0:\n        global.set(\"PGA_gain\", 1);\n        break;\n    case 1:\n        global.set(\"PGA_gain\", 2);\n        break;\n    case 2:\n        global.set(\"PGA_gain\", 4);\n        break;\n    case 3:\n        global.set(\"PGA_gain\", 8);\n        break;\n    case 4:\n        global.set(\"PGA_gain\", 16);\n        break;\n    case 5:\n        global.set(\"PGA_gain\", 32);\n        break;\n    case 6:\n        global.set(\"PGA_gain\", 64);\n        break;\n}\n\nmsg.payload = \"PGA:\" + msg.payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":360,"y":120,"wires":[["b63e818d.e5c8c"]]},{"id":"cbca7ba4.b6f798","type":"function","z":"5de75df9.540e64","name":"","func":"flow.set(\"Sample_rate\", msg.payload);\nmsg.payload = \"Sample rate:\" + msg.payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":360,"y":150,"wires":[["b63e818d.e5c8c"]]},{"id":"479b4d43.dfca24","type":"function","z":"5de75df9.540e64","name":"","func":"flow.set(\"Input_buffer\", msg.payload);\n// msg.payload = \"Input buffer:\" + msg.payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":360,"y":180,"wires":[["b63e818d.e5c8c"]]},{"id":"32afbd7e.caeb82","type":"function","z":"5de75df9.540e64","name":"","func":"flow.set(\"2_electrode_mode\", msg.payload);\n// msg.payload = \"2 electrode mode:\" + msg.payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":360,"y":240,"wires":[["2e60d3c0.b7a97c"]]},{"id":"7856681b.4ceef8","type":"function","z":"5de75df9.540e64","name":"","func":"flow.set(\"Gain\", msg.payload);\nnumber = parseInt(msg.payload);\nswitch (number){\n    case 0:\n        global.set(\"iv_gain\", 0);\n        break;\n    case 1:\n        global.set(\"iv_gain\", 100);\n        break;\n    case 2:\n        global.set(\"iv_gain\", 300);\n        break;\n    case 3:\n        global.set(\"iv_gain\", 30000);\n        break;\n    case 4:\n        global.set(\"iv_gain\", 300000);\n        break;\n    case 5:\n        global.set(\"iv_gain\", 3000000);\n        break;\n    case 6:\n        global.set(\"iv_gain\", 5000000);\n        break;\n}\n\n// msg.payload = \"Gain:\" + msg.payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":360,"y":270,"wires":[["2e60d3c0.b7a97c"]]},{"id":"fbfc1362.0fcab","type":"ui_text","z":"5de75df9.540e64","group":"a82dfb74.30c4f8","order":2,"width":0,"height":0,"name":"PGA settings","label":"","format":"{{msg.payload}}","layout":"row-spread","x":820,"y":150,"wires":[]},{"id":"7302dde1.decc04","type":"ui_text_input","z":"5de75df9.540e64","name":"Potential (mV)","label":"Potential (mV)","tooltip":"","group":"d6f63a0c.df77e8","order":4,"width":0,"height":0,"passthru":true,"mode":"number","delay":300,"topic":"","x":200,"y":540,"wires":[["7312896.6277a78"]]},{"id":"37ac6d7f.6e22c2","type":"ui_text_input","z":"5de75df9.540e64","name":"preconditioning_potential_1","label":"pre_1_potential","tooltip":"","group":"1e146452.52b48c","order":3,"width":0,"height":0,"passthru":true,"mode":"number","delay":300,"topic":"","x":240,"y":780,"wires":[["b0c38348.ae2db"]]},{"id":"2d236ed3.eed4b2","type":"ui_text_input","z":"5de75df9.540e64","name":"preconditioning_time_2","label":"pre_2_time","tooltip":"","group":"1e146452.52b48c","order":6,"width":0,"height":0,"passthru":true,"mode":"number","delay":300,"topic":"","x":230,"y":900,"wires":[["1be4b851.e36d18"]]},{"id":"6d2e00ef.d4ee1","type":"function","z":"5de75df9.540e64","name":"","func":"pots = global.get(\"pots\"); \nn = pots.length;\n\nif (n == undefined || n < 1){\n    chronoamperometry_command = \"You need at least one step\";    \n} else {\n    chronoamperometry_command = \"ER\" + n + \" \" + \"0\" + \" \";\n}\n//global.set(\"chronoamperometry_new_step\", chronoamperometry_new_step);\nglobal.set(\"chronoamperometry_command\", chronoamperometry_command);\n\nmsg.payload = chronoamperometry_command;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":600,"y":540,"wires":[["70482aa6.b44124"]]},{"id":"64b2744a.19c25c","type":"function","z":"5de75df9.540e64","name":"","func":"pot_1 = flow.get(\"CV_pot1\")\ntime_1 = flow.get(\"CV_time1\")\npot_2 = flow.get(\"CV_pot2\")\ntime_2 = flow.get(\"CV_time2\")\npot_start = flow.get(\"CV_pot_start\")\npot_end = flow.get(\"CV_pot_end\")\nslope = flow.get(\"CV_slope\")\n\nmsg.payload = \"EC\" + \" \" + time_1 + \" \" + time_2 +  \n                    \" \" + pot_1 + \" \" + pot_2 +\n                    \" \" + pot_start + \" \" + pot_end + \n                    \" \" + slope + \" \";\n\nglobal.set(\"CV_command\", msg.payload);\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":630,"y":780,"wires":[["3dcdf095.b8541"]]},{"id":"63fa16d5.68d328","type":"function","z":"88b2c004.efb2e","name":"set data next yes or no","func":"// if payload is \"B\\n\" == [66,10] is because data is comming\n// then flow variable \"data_next\" is set to 1\nbuffer = msg.payload;\nif (buffer.toString().startsWith(\"B\")){\n    flow.set(\"data_next\",1);\n    // ignore this output\n    return 0;\n} else {\n    // flow.set(\"data_next\",0);\n    msg.payload = buffer;\n    return msg;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","x":940,"y":160,"wires":[["f55b52f5.9d4f1"]]},{"id":"b3b8f76a.2d7398","type":"function","z":"88b2c004.efb2e","name":"If next is string","func":"message = msg.payload;\ndata_available = flow.get(\"data_available\");\nif (data_available == 1){\n    msg.payload = message;\n    flow.set(\"data_graph\",1);\n    flow.set(\"data_available\",0);\n    return msg\n}\nelse {\n    // message = msg.payload;\n    string = msg.payload.toString();\n    // if preceded by \"#\" is human redable that must be logged\n    if (string.startsWith(\"#\")){\n        msg.payload = string;\n        msg.log = string;\n        return msg;\n    }\n    // if preceded by \"@ACK\", dstat communicates the characters \n    // it expects from the user n characters\n    // substring is used to log the number\n    else if (string.startsWith(\"@ACK\")){\n        substring = string.substring(5);\n        substring = parseInt(substring, 10);\n        flow.set(\"acknowledge\", substring);\n        \n        // sub condition in case that the command is just to check\n        // dstat is connected\n        if (substring == 0){\n            flow.set(\"response\", \"dstat connected\");\n            flow.set(\"done\", 1);\n            msg.payload = \"dstat connected\";\n            return msg;            \n        }\n        msg.payload = string;\n        return msg;\n    } \n    // if preceded by \"@RQP\", dstat communicates the need \n    // of additional n parameters\n    // substring is used to log the number\n    else if (string.startsWith(\"@RQP\")){\n        substring = string.substring(5);\n        substring = parseInt(substring, 10);\n        flow.set(\"parameters_request\", substring);\n        flow.set(\"sent_parameter\",0);\n        // As we set the flow variable, we do not need output\n        // return 0\n        // msg.payload = \"I get here\";\n        msg.payload = string;\n        return msg;\n    }\n    // if preceded by \"@RCVC\", dstat communicates the parameter\n    // received last\n    else if (string.startsWith(\"@RCVC\")){\n        substring = string.substring(6);\n        flow.set(\"parameter_chain\", substring);\n        flow.set(\"parameters_error\", 0);\n        // As we set the flow variable, we do not need output\n        // return 0\n        parameters = global.get(\"parameters\");\n        counter_pre = flow.get(\"parameter_counter\");\n        sub = parameters[counter_pre];\n        \n        if(sub==substring){\n            counter = counter_pre + 1;\n            flow.set(\"sent_parameter\",0);\n            flow.set(\"parameter_counter\", counter);\n        }\n        \n        next = parameters[counter];\n        message = string + \"\\n\" + \n            \"parametro numero: \" + counter_pre + \"\\n\" + \n            \"parametro: \" + sub + \" = substring: \" + substring + \"\\n\" +\n            \"next parameter: \" + next;\n        msg.payload = message;\n        return msg;\n    }\n    // if preceded by \"@RCP\", dstat communicates the number \n    // of parameters received that should be the same as the ones\n    // previouslty required\n    else if (string.startsWith(\"@RCP\")){\n        substring = string.substring(5);\n        substring = parseInt(substring, 10);\n        flow.set(\"parameters_received\", substring);\n        flow.set(\"parameters_error\", 0);\n        \n        msg.payload = string + \"\\n\" +\n            \"all parameters received\";\n        return msg;\n    } \n    // if preceded by \"@RCVE\", dstat communicates and \n    // error receiving parameters \n    else if (string.startsWith(\"@RCVE\")){\n        if(flow.get(\"parameters_error\") == null){\n            flow.set(\"parameters_error\", 1);\n            msg.payload = string + \"\\n\" +\n                \"first error\";\n            return msg;\n        }\n        else {\n            p_error = flow.get(\"parameters_error\");\n            flow.set(\"parameters_error\", p_error + 1);\n            msg.payload = string + \"\\n\" +\n                \"error again\"\n        }\n        // As we set the flow variable, we do not need output\n        // return 0\n        msg.payload = string;\n        return msg;\n    }\n    // if preceded by \"@RCV\", dstat communicates the characters \n    // received from the user n characters\n    // substring is used to log the number\n    else if (string.startsWith(\"@RCV\")){\n        substring = string.substring(5);\n        substring = parseInt(substring, 10);\n        flow.set(\"received\", substring);\n        // As we set the flow variable, we do not need output\n        // return 0\n        msg.payload = string;\n        return msg;\n    }\n    // if preceded by \"@DONE\", dstat communicates the \n    // experiment is finished\n    else if (string.startsWith(\"@DONE\")){\n        flow.set(\"done\", 1);\n        // As we set the flow variable, we do not need output\n        // return 0\n        msg.payload = string;\n        return msg;\n    } \n    else {\n        flow.set(\"response\", string);\n        msg.payload = string;\n        return msg;\n    }\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":980,"y":300,"wires":[["5aef0159.92b33","dd8af2fc.5f4b","661ffce8.5e9234"]]},{"id":"e3af4491.c5ac58","type":"function","z":"88b2c004.efb2e","name":"Reinitialize flow variables","func":"// set payload as command\nflow.set(\"command\", msg.payload)\n\n// responses from dstat\nflow.set(\"acknowledge\", \"not ack\")\nflow.set(\"received\", \"not received\")\n\n// flow variables to filter data\nflow.set(\"data_next\", 0)\nflow.set(\"data_available\", 0)\n\n// flow variables for handling parameters\nflow.set(\"parameters_request\", 0)\nflow.set(\"parameters_received\", 0)\nflow.set(\"parameters_error\", 0)\nflow.set(\"parameter_counter\", 0)\n\n// flow variables to set type of experiment\nflow.set(\"experiment\", \"waiting\")\n\n// variable to keep dstat response\nflow.set(\"response\", \"waiting...\")\n\n// boolean to check if the experiment is done\nflow.set(\"done\", 0)\n\nreturn msg","outputs":1,"noerr":0,"initialize":"","finalize":"","x":250,"y":600,"wires":[["52a713f.0e238ec"]]},{"id":"c3c65671.908398","type":"ui_button","z":"88b2c004.efb2e","name":"ADC_command","group":"a82dfb74.30c4f8","order":1,"width":0,"height":0,"passthru":true,"label":"Set ADC parameters","tooltip":"","color":"","bgcolor":"","icon":"","payload":"ADC_command","payloadType":"global","topic":"","x":260,"y":720,"wires":[["1863151.96023eb"]]},{"id":"3255f825.479f88","type":"inject","z":"88b2c004.efb2e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":90,"y":720,"wires":[["c3c65671.908398"]]},{"id":"2e60d3c0.b7a97c","type":"function","z":"5de75df9.540e64","name":"","func":"Electrode_mode = flow.get(\"2_electrode_mode\");\nGain = flow.get(\"Gain\");\n\ngain_mode_command = \"EG\" + Gain + \n                        \" \" + Electrode_mode + \" \"\n                        \n\nglobal.set(\"gain_mode_command\", gain_mode_command);\nmsg.payload = gain_mode_command;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":600,"y":240,"wires":[["4780e2b8.240d8c"]]},{"id":"4780e2b8.240d8c","type":"ui_text","z":"5de75df9.540e64","group":"a82dfb74.30c4f8","order":8,"width":0,"height":0,"name":"Gain settings","label":"","format":"{{msg.payload}}","layout":"row-spread","x":820,"y":240,"wires":[]},{"id":"92eda1f6.885a9","type":"ui_button","z":"88b2c004.efb2e","name":"Gain_mode_command","group":"a82dfb74.30c4f8","order":7,"width":0,"height":0,"passthru":true,"label":"Set gain and mode","tooltip":"","color":"","bgcolor":"","icon":"","payload":"gain_mode_command","payloadType":"global","topic":"","x":280,"y":750,"wires":[["c0753a88.1930c8"]]},{"id":"d90e8a18.ee3908","type":"inject","z":"88b2c004.efb2e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":90,"y":750,"wires":[["92eda1f6.885a9"]]},{"id":"378212f9.8ab78e","type":"ui_switch","z":"5de75df9.540e64","name":"OCP or potentiometry","label":"OCP (WE disconnected)","tooltip":"","group":"920360d3.be108","order":3,"width":0,"height":0,"passthru":true,"decouple":"false","topic":"","style":"","onvalue":"1","onvalueType":"str","onicon":"","oncolor":"","offvalue":"0","offvalueType":"str","officon":"","offcolor":"","x":220,"y":360,"wires":[["ebad780a.5781c8"]]},{"id":"ebad780a.5781c8","type":"function","z":"5de75df9.540e64","name":"","func":"flow.set(\"OCP_mode\", msg.payload);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":390,"y":360,"wires":[["767e1755.2ba8f8"]]},{"id":"767e1755.2ba8f8","type":"function","z":"5de75df9.540e64","name":"","func":"OCP = flow.get(\"OCP_mode\");\ntime = flow.get(\"time_potentiometry\");\n\npotentiometry_command = \"EP\" + time + \n                        \" \" + OCP + \" \"\n                        \n\nglobal.set(\"potentiometry_command\", potentiometry_command);\nmsg.payload = potentiometry_command;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":600,"y":360,"wires":[["75688dd2.01f064"]]},{"id":"75688dd2.01f064","type":"ui_text","z":"5de75df9.540e64","group":"920360d3.be108","order":2,"width":0,"height":0,"name":"Potentiometry","label":"","format":"{{msg.payload}}","layout":"row-spread","x":830,"y":360,"wires":[]},{"id":"d7d3b1a9.b281c","type":"ui_button","z":"88b2c004.efb2e","name":"Chronoamperometry","group":"d6f63a0c.df77e8","order":1,"width":0,"height":0,"passthru":true,"label":"Chronoamperometry","tooltip":"","color":"","bgcolor":"","icon":"","payload":"chronoamperometry","payloadType":"str","topic":"","x":260,"y":900,"wires":[["2bd238b2.026778"]]},{"id":"477999cc.3e7018","type":"inject","z":"88b2c004.efb2e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":80,"y":900,"wires":[["d7d3b1a9.b281c"]]},{"id":"f3e2c4c6.9d66f8","type":"ui_text_input","z":"5de75df9.540e64","name":"Time (s)","label":"Time (s)","tooltip":"","group":"920360d3.be108","order":5,"width":0,"height":0,"passthru":true,"mode":"number","delay":300,"topic":"","x":180,"y":420,"wires":[["5a3eb4ff.38a62c"]]},{"id":"d69510c4.459a6","type":"ui_switch","z":"5de75df9.540e64","name":"Continuosly","label":"Continuously","tooltip":"","group":"920360d3.be108","order":4,"width":0,"height":0,"passthru":true,"decouple":"false","topic":"Infinite","style":"","onvalue":"0","onvalueType":"str","onicon":"","oncolor":"","offvalue":"null","offvalueType":"str","officon":"","offcolor":"","x":190,"y":390,"wires":[["f3e2c4c6.9d66f8"]]},{"id":"5a3eb4ff.38a62c","type":"function","z":"5de75df9.540e64","name":"","func":"flow.set(\"time_potentiometry\", msg.payload);\nreturn msg","outputs":1,"noerr":0,"initialize":"","finalize":"","x":390,"y":420,"wires":[["767e1755.2ba8f8"]]},{"id":"24a48f50.fa35c","type":"ui_button","z":"88b2c004.efb2e","name":"Cyclic voltrammetry","group":"1e146452.52b48c","order":1,"width":0,"height":0,"passthru":true,"label":"Cyclic voltammetry","tooltip":"","color":"","bgcolor":"","icon":"","payload":"cyclic_voltammetry","payloadType":"str","topic":"","x":250,"y":940,"wires":[["268dd6bd.03f31a"]]},{"id":"7fef0f3.c1e93f","type":"inject","z":"88b2c004.efb2e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":80,"y":940,"wires":[["24a48f50.fa35c"]]},{"id":"70482aa6.b44124","type":"ui_text","z":"5de75df9.540e64","group":"d6f63a0c.df77e8","order":2,"width":0,"height":0,"name":"Chronoamperometry","label":"","format":"{{msg.payload}}","layout":"row-spread","x":850,"y":540,"wires":[]},{"id":"3dcdf095.b8541","type":"ui_text","z":"5de75df9.540e64","group":"1e146452.52b48c","order":2,"width":0,"height":0,"name":"Cyclic voltammetry","label":"","format":"{{msg.payload}}","layout":"row-spread","x":840,"y":780,"wires":[]},{"id":"7312896.6277a78","type":"function","z":"5de75df9.540e64","name":"","func":"flow.set(\"Potential_chronoamperometry\", msg.payload);\n// msg.payload = \"Input buffer:\" + msg.payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":390,"y":540,"wires":[["6d2e00ef.d4ee1"]]},{"id":"7c3afa8e.1044e4","type":"function","z":"5de75df9.540e64","name":"","func":"flow.set(\"Time_chronoamperometry\", msg.payload);\n// msg.payload = \"Input buffer:\" + msg.payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":390,"y":630,"wires":[["6d2e00ef.d4ee1"]]},{"id":"9d8dfbcd.6e9a98","type":"ui_switch","z":"5de75df9.540e64","name":"Continuosly","label":"Continuously","tooltip":"","group":"d6f63a0c.df77e8","order":3,"width":0,"height":0,"passthru":true,"decouple":"false","topic":"Infinite","style":"","onvalue":"0","onvalueType":"str","onicon":"","oncolor":"","offvalue":"null","offvalueType":"str","officon":"","offcolor":"","x":190,"y":570,"wires":[["d6624a6f.d41558"]]},{"id":"d6624a6f.d41558","type":"ui_text_input","z":"5de75df9.540e64","name":"Time (s)","label":"Time (s)","tooltip":"","group":"d6f63a0c.df77e8","order":5,"width":0,"height":0,"passthru":false,"mode":"number","delay":300,"topic":"","x":180,"y":630,"wires":[["7c3afa8e.1044e4","6d2e00ef.d4ee1"]]},{"id":"d806a8d.d27d658","type":"ui_text_input","z":"5de75df9.540e64","name":"preconditioning_potential_2","label":"pre_2_potential","tooltip":"","group":"1e146452.52b48c","order":5,"width":0,"height":0,"passthru":true,"mode":"number","delay":300,"topic":"","x":240,"y":870,"wires":[["3dcd3307.73ddbc"]]},{"id":"42384134.71e","type":"ui_text_input","z":"5de75df9.540e64","name":"preconditioning_time_1","label":"pre_1_time","tooltip":"","group":"1e146452.52b48c","order":4,"width":0,"height":0,"passthru":true,"mode":"number","delay":300,"topic":"","x":230,"y":810,"wires":[["e563a7c.4612258"]]},{"id":"7e5d2a64.4beef4","type":"ui_text_input","z":"5de75df9.540e64","name":"voltage start","label":"start_potential","tooltip":"","group":"1e146452.52b48c","order":7,"width":0,"height":0,"passthru":true,"mode":"number","delay":300,"topic":"","x":190,"y":960,"wires":[["c7fb63c3.ddfba"]]},{"id":"97d36557.d44ce8","type":"ui_text_input","z":"5de75df9.540e64","name":"voltage end","label":"end_potential","tooltip":"","group":"1e146452.52b48c","order":8,"width":0,"height":0,"passthru":true,"mode":"number","delay":300,"topic":"","x":190,"y":990,"wires":[["2d5061e3.72582e"]]},{"id":"833f94d5.e01e68","type":"ui_text_input","z":"5de75df9.540e64","name":"slope","label":"slope","tooltip":"","group":"1e146452.52b48c","order":9,"width":0,"height":0,"passthru":true,"mode":"number","delay":300,"topic":"","x":170,"y":1050,"wires":[["55c8cb7f.71af34"]]},{"id":"b0c38348.ae2db","type":"function","z":"5de75df9.540e64","name":"","func":"flow.set(\"CV_pot1\", msg.payload);\n// msg.payload = \"Input buffer:\" + msg.payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":450,"y":780,"wires":[["64b2744a.19c25c"]]},{"id":"e563a7c.4612258","type":"function","z":"5de75df9.540e64","name":"","func":"flow.set(\"CV_time1\", msg.payload);\n// msg.payload = \"Input buffer:\" + msg.payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":450,"y":810,"wires":[["64b2744a.19c25c"]]},{"id":"3dcd3307.73ddbc","type":"function","z":"5de75df9.540e64","name":"","func":"flow.set(\"CV_pot2\", msg.payload);\n// msg.payload = \"Input buffer:\" + msg.payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":450,"y":870,"wires":[["64b2744a.19c25c"]]},{"id":"1be4b851.e36d18","type":"function","z":"5de75df9.540e64","name":"","func":"flow.set(\"CV_time2\", msg.payload);\n// msg.payload = \"Input buffer:\" + msg.payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":450,"y":900,"wires":[["64b2744a.19c25c"]]},{"id":"c7fb63c3.ddfba","type":"function","z":"5de75df9.540e64","name":"","func":"flow.set(\"CV_pot_start\", msg.payload);\n// msg.payload = \"Input buffer:\" + msg.payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":450,"y":960,"wires":[["64b2744a.19c25c"]]},{"id":"2d5061e3.72582e","type":"function","z":"5de75df9.540e64","name":"","func":"flow.set(\"CV_pot_end\", msg.payload);\n// msg.payload = \"Input buffer:\" + msg.payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":450,"y":990,"wires":[[]]},{"id":"55c8cb7f.71af34","type":"function","z":"5de75df9.540e64","name":"","func":"flow.set(\"CV_slope\", msg.payload);\n// msg.payload = \"Input buffer:\" + msg.payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":450,"y":1050,"wires":[["64b2744a.19c25c"]]},{"id":"268dd6bd.03f31a","type":"function","z":"88b2c004.efb2e","name":"Experiment case 2","func":"msg.payload = global.get(\"CV_command\");\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":470,"y":940,"wires":[["304ad502.d9173a"]]},{"id":"2bd238b2.026778","type":"function","z":"88b2c004.efb2e","name":"Experiment case 1","func":"msg.payload = global.get(\"chronoamperometry_command\");\n// at some point I should get the parameters\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":470,"y":900,"wires":[["304ad502.d9173a"]]},{"id":"821f991e.fec3c8","type":"function","z":"88b2c004.efb2e","name":"Experiment case 0","func":"msg.payload = global.get(\"potentiometry_command\");\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":470,"y":860,"wires":[["304ad502.d9173a"]]},{"id":"1863151.96023eb","type":"function","z":"88b2c004.efb2e","name":"ADC command","func":"msg.payload = global.get(\"ADC_command\");\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":410,"y":720,"wires":[["304ad502.d9173a"]]},{"id":"c0753a88.1930c8","type":"function","z":"88b2c004.efb2e","name":"Gain mode command","func":"msg.payload = global.get(\"gain_mode_command\")\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":460,"y":750,"wires":[["304ad502.d9173a"]]},{"id":"a42f9ccc.15c","type":"ui_button","z":"88b2c004.efb2e","name":"Potentiometry","group":"920360d3.be108","order":1,"width":0,"height":0,"passthru":true,"label":"Potentiometry","tooltip":"","color":"","bgcolor":"","icon":"","payload":"potentiometry","payloadType":"str","topic":"","x":240,"y":860,"wires":[["821f991e.fec3c8"]]},{"id":"e0c2d109.4fc7b","type":"ui_button","z":"5de75df9.540e64","name":"Add step","group":"d6f63a0c.df77e8","order":6,"width":0,"height":0,"passthru":false,"label":"Add step","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","x":390,"y":660,"wires":[["599ca43b.89fabc","6d2e00ef.d4ee1"]]},{"id":"599ca43b.89fabc","type":"function","z":"5de75df9.540e64","name":"","func":"new_pot = flow.get(\"Potential_chronoamperometry\");\n// transformation based on 16 bit unsigned\n// reverse engineered? from dstat \n// first convert to volts\nnew_pot_mV = new_pot;\nnew_pot = new_pot / 1000;\nnew_pot = 65536/3 * new_pot;\nnew_pot = new_pot + 32768;\nnew_pot = Math.round(new_pot);\nnew_time = flow.get(\"Time_chronoamperometry\");\n\nif(global.get(\"pots\") == undefined){\n    // new_pot = [new_pot];\n    let pots = [];\n    pots.push(new_pot);\n    global.set(\"pots\", pots);\n} else {\n    pots = global.get(\"pots\");\n    pots.push(new_pot);\n    global.set(\"pots\", pots);\n}\n\nif(global.get(\"pots_mV\") == undefined){\n    // new_pot = [new_pot];\n    let pots_mV = [];\n    pots_mV.push(new_pot_mV);\n    global.set(\"pots_mV\", pots_mV);\n} else {\n    pots_mV = global.get(\"pots_mV\");\n    pots_mV.push(new_pot_mV);\n    global.set(\"pots_mV\", pots_mV);\n}\n\nif(global.get(\"times\") == undefined){\n    // new_time = [new_time];\n    let times = [];\n    times.push(new_time);\n    global.set(\"times\", times);\n} else {\n    times = global.get(\"times\");\n    times.push(new_time);\n    global.set(\"times\", times);\n}\n\npots = global.get(\"pots\");\ntimes = global.get(\"times\");   \nglobal.set(\"parameters\", pots.concat(times));\n// msg.payload = \n\nlet table = [];\nlet step = [];\nfor (i = 0; i < pots.length; i++) {\n    step = {\n        \"pots\" : pots[i],\n        \"pots_mV\" : pots_mV[i],\n        \"times\" : times[i]\n    };\n    table.push(step);\n}\nmsg.payload = table;\nreturn msg\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":600,"y":660,"wires":[["10401153.2c319f"]]},{"id":"10401153.2c319f","type":"ui_table","z":"5de75df9.540e64","group":"d6f63a0c.df77e8","name":"","order":7,"width":0,"height":0,"columns":[],"outputs":0,"cts":false,"x":920,"y":660,"wires":[]},{"id":"7a600067.fec3c","type":"ui_button","z":"5de75df9.540e64","name":"Delete table","group":"d6f63a0c.df77e8","order":8,"width":0,"height":0,"passthru":false,"label":"Delete table","tooltip":"","color":"","bgcolor":"red","icon":"","payload":"","payloadType":"str","topic":"","x":400,"y":690,"wires":[["96e883f9.fa67","6d2e00ef.d4ee1"]]},{"id":"96e883f9.fa67","type":"function","z":"5de75df9.540e64","name":"","func":"pots = global.set(\"pots\", []);\npots_mV = global.set(\"pots_mV\", []);\ntimes = global.set(\"times\", []);   \n// msg.payload = \n\nlet table = [];\nlet step = [];\nstep = {\n        \"pots\" : global.get(\"pots\"),\n        \"pots_mV\" : global.get(\"pots_mV\"),\n        \"times\" : global.get(\"times\")\n}\ntable.push(step);\nmsg.payload = table;\nreturn msg\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":600,"y":690,"wires":[["10401153.2c319f"]]},{"id":"da43ec6d.bbef3","type":"ui_button","z":"5de75df9.540e64","name":"PGA to queue","group":"a82dfb74.30c4f8","order":6,"width":0,"height":0,"passthru":false,"label":"Add to queue","tooltip":"","color":"","bgcolor":"lightblue","icon":"","payload":"ADC_command","payloadType":"global","topic":"","x":830,"y":120,"wires":[["497d5b4c.4ad4f4"]]},{"id":"bff477e6.fe87a8","type":"ui_button","z":"5de75df9.540e64","name":"Potentiometry to queue","group":"920360d3.be108","order":6,"width":0,"height":0,"passthru":false,"label":"Add to queue","tooltip":"","color":"","bgcolor":"lightblue","icon":"","payload":"potentiometry_command","payloadType":"global","topic":"","x":860,"y":330,"wires":[["46bce918.192bf8"]]},{"id":"85f8dfc1.18f49","type":"ui_button","z":"5de75df9.540e64","name":"chronoamperometry to queue","group":"d6f63a0c.df77e8","order":9,"width":0,"height":0,"passthru":false,"label":"Add to queue","tooltip":"","color":"","bgcolor":"lightblue","icon":"","payload":"chronoamperometry_command","payloadType":"global","topic":"","x":870,"y":510,"wires":[["8f1c1866.b7e5f8"]]},{"id":"4180fee9.6c87a","type":"ui_button","z":"5de75df9.540e64","name":"Gain to queue","group":"a82dfb74.30c4f8","order":11,"width":0,"height":0,"passthru":false,"label":"Add to queue","tooltip":"","color":"","bgcolor":"lightblue","icon":"","payload":"gain_mode_command","payloadType":"global","topic":"","x":830,"y":210,"wires":[["846e2084.9992f"]]},{"id":"d7ae613e.7149","type":"ui_button","z":"5de75df9.540e64","name":"CV to queue","group":"1e146452.52b48c","order":10,"width":0,"height":0,"passthru":false,"label":"Add to queue","tooltip":"","color":"","bgcolor":"lightblue","icon":"","payload":"CV_command","payloadType":"global","topic":"","x":820,"y":750,"wires":[["2c8fbbdd.8d96a4"]]},{"id":"80e4da2e.1338d8","type":"function","z":"5de75df9.540e64","name":"","func":"queue_commands = global.get(\"queue_commands\");\nqueue_parameters = global.get(\"queue_parameters\");\n\nlet table = [];\nlet new_command = [];\nfor (i = 0; i < queue_commands.length; i++) {\n    new_command = {\n        \"command\" : queue_commands[i],\n        \"parameters\" : queue_parameters[i]\n    };\n    table.push(new_command);\n}\n\nmsg.payload = table;\nreturn msg\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1290,"y":450,"wires":[["b65b81b9.1b714"]]},{"id":"df94db11.dd0228","type":"ui_button","z":"5de75df9.540e64","name":"Delete table","group":"4e618391.3cbfdc","order":2,"width":0,"height":0,"passthru":false,"label":"Delete table","tooltip":"","color":"","bgcolor":"red","icon":"","payload":"","payloadType":"str","topic":"","x":790,"y":960,"wires":[["63ab1c7a.52ba74"]]},{"id":"63ab1c7a.52ba74","type":"function","z":"5de75df9.540e64","name":"","func":"global.set(\"queue_commands\", []);\nglobal.set(\"queue_parameters\", []);\n\nlet table = [];\nlet new_command = [];\nnew_command = {\n        \"commands\" : global.get(\"queue_commands\"),\n        \"parameters\" : global.get(\"queue_parameters\")\n}\ntable.push(new_command);\nmsg.payload = table;\nreturn msg\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":960,"y":960,"wires":[["b65b81b9.1b714"]]},{"id":"8f1c1866.b7e5f8","type":"function","z":"5de75df9.540e64","name":"Add command","func":"new_command = global.get(\"chronoamperometry_command\");\nqueue_commands = global.get(\"queue_commands\");\nif(queue_commands == undefined){\n    let queue_commands = [];\n    queue_commands.push(new_command);\n    global.set(\"queue_commands\", queue_commands);\n} else {\n    queue_commands = global.get(\"queue_commands\");\n    queue_commands.push(new_command);\n    global.set(\"queue_commands\", queue_commands);\n}\n\npots = global.get(\"pots\");\ntimes = global.get(\"times\");\nnew_parameters = pots + \",\" + times;\nqueue_parameters = global.get(\"queue_parameters\");\nif(queue_parameters == undefined){\n    let queue_parameters = [];\n    queue_parameters.push(new_parameters);\n    global.set(\"queue_parameters\", queue_parameters);\n} else {\n    queue_parameters = global.get(\"queue_parameters\");\n    queue_parameters.push(new_parameters);\n    global.set(\"queue_parameters\", queue_parameters);\n}\n\nmsg.payload = {\n    \"command\": new_command,\n    \"parameters\": new_parameters\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1070,"y":510,"wires":[["80e4da2e.1338d8"]]},{"id":"497d5b4c.4ad4f4","type":"function","z":"5de75df9.540e64","name":"Add command","func":"new_command = global.get(\"ADC_command\");\nqueue_commands = global.get(\"queue_commands\");\nif(queue_commands == undefined){\n    let queue_commands = [];\n    queue_commands.push(new_command);\n    global.set(\"queue_commands\", queue_commands);\n} else {\n    queue_commands = global.get(\"queue_commands\");\n    queue_commands.push(new_command);\n    global.set(\"queue_commands\", queue_commands);\n}\n\nnew_parameters = \"no parameters\";\nqueue_parameters = global.get(\"queue_parameters\");\nif(queue_parameters == undefined){\n    let queue_parameters = [];\n    queue_parameters.push(new_parameters);\n    global.set(\"queue_parameters\", queue_parameters);\n} else {\n    queue_parameters = global.get(\"queue_parameters\");\n    queue_parameters.push(new_parameters);\n    global.set(\"queue_parameters\", queue_parameters);\n}\n\nmsg.payload = {\n    \"command\": new_command,\n    \"parameters\": new_parameters\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":980,"y":120,"wires":[["80e4da2e.1338d8"]]},{"id":"846e2084.9992f","type":"function","z":"5de75df9.540e64","name":"Add command","func":"new_command = global.get(\"gain_mode_command\");\nqueue_commands = global.get(\"queue_commands\");\nif(queue_commands == undefined){\n    let queue_commands = [];\n    queue_commands.push(new_command);\n    global.set(\"queue_commands\", queue_commands);\n} else {\n    queue_commands = global.get(\"queue_commands\");\n    queue_commands.push(new_command);\n    global.set(\"queue_commands\", queue_commands);\n}\n\nnew_parameters = \"no parameters\";\nqueue_parameters = global.get(\"queue_parameters\");\nif(queue_parameters == undefined){\n    let queue_parameters = [];\n    queue_parameters.push(new_parameters);\n    global.set(\"queue_parameters\", queue_parameters);\n} else {\n    queue_parameters = global.get(\"queue_parameters\");\n    queue_parameters.push(new_parameters);\n    global.set(\"queue_parameters\", queue_parameters);\n}\n\nmsg.payload = {\n    \"command\": new_command,\n    \"parameters\": new_parameters\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":980,"y":210,"wires":[["80e4da2e.1338d8"]]},{"id":"46bce918.192bf8","type":"function","z":"5de75df9.540e64","name":"Add command","func":"new_command = global.get(\"potentiometry_command\");\nqueue_commands = global.get(\"queue_commands\");\nif(queue_commands == undefined){\n    let queue_commands = [];\n    queue_commands.push(new_command);\n    global.set(\"queue_commands\", queue_commands);\n} else {\n    queue_commands = global.get(\"queue_commands\");\n    queue_commands.push(new_command);\n    global.set(\"queue_commands\", queue_commands);\n}\n\nqueue_parameters = global.get(\"queue_parameterse\");\nnew_parameters = \"no parameters\";\nif(queue_parameters == undefined){\n    let queue_parameters = [];\n    queue_parameters.push(new_parameters);\n    global.set(\"queue_parameters\", queue_parameters);\n} else {\n    queue_parameters = global.get(\"queue_parameters\");\n    queue_parameters.push(new_parameters);\n    global.set(\"queue_parameters\", queue_parameters);\n}\n\nmsg.payload = {\n    \"command\": new_command,\n    \"parameters\": new_parameters\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1040,"y":330,"wires":[["80e4da2e.1338d8"]]},{"id":"2c8fbbdd.8d96a4","type":"function","z":"5de75df9.540e64","name":"Add command","func":"new_command = global.get(\"CV_command\");\nqueue_commands = global.get(\"queue_commands\");\nif(queue_commands == undefined){\n    let queue_commands = [];\n    queue_commands.push(new_command);\n    global.set(\"queue_commands\", queue_commands);\n} else {\n    queue_commands = global.get(\"queue_commands\");\n    queue_commands.push(new_command);\n    global.set(\"queue_commands\", queue_commands);\n}\n\nnew_parameters = \"no parameters\";\nqueue_parameters = global.get(\"queue_parameters\");\nif(queue_parameters == undefined){\n    let queue_parameters = [];\n    queue_parameters.push(new_parameters);\n    global.set(\"queue_parameters\", queue_parameters);\n} else {\n    queue_parameters = global.get(\"queue_parameters\");\n    queue_parameters.push(new_parameters);\n    global.set(\"queue_parameters\", queue_parameters);\n}\n\nmsg.payload = {\n    \"command\": new_command,\n    \"parameters\": new_parameters\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":950,"y":750,"wires":[["80e4da2e.1338d8"]]},{"id":"b65b81b9.1b714","type":"ui_table","z":"5de75df9.540e64","group":"4e618391.3cbfdc","name":"","order":1,"width":6,"height":7,"columns":[],"outputs":0,"cts":false,"x":1190,"y":780,"wires":[]},{"id":"c33b3ab4.1b5fe8","type":"debug","z":"88b2c004.efb2e","name":"dstat data","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1300,"y":500,"wires":[]},{"id":"c9218fbe.0e3d8","type":"function","z":"56d1bb6c.021d04","name":"","func":"Influx_JSON = global.get(\"Influx_JSON\");\nmsg.payload = Influx_JSON\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":300,"y":60,"wires":[["3012d8b7.152398"]]},{"id":"3012d8b7.152398","type":"influxdb out","z":"56d1bb6c.021d04","influxdb":"93d92fa0.2b904","name":"influx db dstat_dstatzero","measurement":"dstatzero","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"organisation","bucket":"bucket","x":490,"y":60,"wires":[]},{"id":"f043dc8d.e7cee","type":"function","z":"88b2c004.efb2e","name":"Parsing to INFLUX and global","func":"if(flow.get(\"data_graph\")==1){\n    Influx_JSON = {\n        experiment: msg.payload.experiment, \n        voltage: msg.payload.voltage_mV,\n        current: msg.payload.current_mA,\n        seconds: msg.payload.seconds,\n        date: msg.payload.date\n    };\n    global.set(\"Influx_JSON\",Influx_JSON);\n    msg.payload = Influx_JSON;\n    flow.set(\"data_graph\",0);\n    return msg;\n} else {\n    return 0\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1170,"y":600,"wires":[["d00a7144.843ef","4f091e1f.db759","a5b3a12f.2cea7"]]},{"id":"1ae8afa0.a73ab","type":"inject","z":"56d1bb6c.021d04","name":"Every second","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"1","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":130,"y":60,"wires":[[]]},{"id":"9679dac7.01b328","type":"influxdb out","z":"88b2c004.efb2e","influxdb":"93d92fa0.2b904","name":"influx db dstat_potentiometry","measurement":"dstat_potentiometry","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"organisation","bucket":"bucket","x":1640,"y":580,"wires":[]},{"id":"397960db.83ec","type":"function","z":"56d1bb6c.021d04","name":"","func":"Influx_JSON = global.get(\"Influx_JSON\");\nmsg.payload = Influx_JSON\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":240,"y":180,"wires":[["33204139.0e390e"]]},{"id":"33204139.0e390e","type":"influxdb in","z":"56d1bb6c.021d04","influxdb":"93d92fa0.2b904","name":"","query":"","rawOutput":false,"precision":"","retentionPolicy":"","org":"organisation","x":440,"y":180,"wires":[[]]},{"id":"75fcd03c.4db41","type":"influxdb out","z":"88b2c004.efb2e","influxdb":"93d92fa0.2b904","name":"influx db dstat_chronoamperometry","measurement":"dstat_chronoamperometry","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"organisation","bucket":"bucket","x":1660,"y":620,"wires":[]},{"id":"576267f6.7930a8","type":"influxdb out","z":"88b2c004.efb2e","influxdb":"93d92fa0.2b904","name":"influx db dstat_CV","measurement":"dstat_CV","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"organisation","bucket":"bucket","x":1610,"y":660,"wires":[]},{"id":"d00a7144.843ef","type":"function","z":"88b2c004.efb2e","name":"","func":"if(flow.get(\"experiment\")==0){\n    return msg;\n} else {\n    return 0\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1420,"y":580,"wires":[["9679dac7.01b328"]]},{"id":"4f091e1f.db759","type":"function","z":"88b2c004.efb2e","name":"","func":"if(flow.get(\"experiment\")==1){\n    return msg;\n} else {\n    return 0\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1420,"y":620,"wires":[["75fcd03c.4db41"]]},{"id":"a5b3a12f.2cea7","type":"function","z":"88b2c004.efb2e","name":"","func":"if(flow.get(\"experiment\")==2){\n    return msg;\n} else {\n    return 0\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1420,"y":660,"wires":[["576267f6.7930a8"]]},{"id":"45977163.e5697","type":"inject","z":"88b2c004.efb2e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"10","payloadType":"str","x":340,"y":240,"wires":[["70802a86.9aab04"]]},{"id":"60b60b4b.6d28e4","type":"function","z":"88b2c004.efb2e","name":"","func":"msg.payload = msg.payload.toString();\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":910,"y":80,"wires":[["a6b89f4a.946b5"]]},{"id":"62df83fb.224bec","type":"ui_button","z":"9a17449e.eb5068","name":"","group":"72fc319.cc425d","order":5,"width":0,"height":0,"passthru":false,"label":"Show databases","tooltip":"","color":"","bgcolor":"green","icon":"","payload":"","payloadType":"str","topic":"","x":130,"y":560,"wires":[["30092185.88709e"]]},{"id":"30092185.88709e","type":"exec","z":"9a17449e.eb5068","command":"influx -execute 'SHOW DATABASES'","addpay":false,"append":"","useSpawn":"","timer":"","name":"Shutdown","x":300,"y":560,"wires":[["e79fe67e.335288"],[],[]]},{"id":"e79fe67e.335288","type":"ui_text","z":"9a17449e.eb5068","group":"72fc319.cc425d","order":6,"width":0,"height":0,"name":"","label":"DATABASES","format":"{{msg.payload}}","layout":"row-spread","x":550,"y":560,"wires":[]}]
